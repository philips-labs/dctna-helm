apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "dctna.fullname" . }}-web
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "dctna.labels" . | nindent 4 }}
spec:
{{- if not .Values.web.autoscaling.enabled }}
  replicas: {{ .Values.web.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "dctna.selectorLabels" . | nindent 6 }}
      component: web
  template:
    metadata:
    {{- with .Values.web.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "dctna.selectorLabels" . | nindent 8 }}
        component: web
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "dctna.serviceAccountName" . }}-web
      securityContext:
        {{- toYaml .Values.web.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.web.securityContext | nindent 12 }}
          image: {{ .Values.web.image.repository }}:{{ .Values.web.image.tag | default (print "v" .Chart.AppVersion) }}
          imagePullPolicy: {{ .Values.web.image.pullPolicy }}
          env:
            - name: DCTNA_API
              value: {{ print "https://" (include "dctna.fullname" .) "-server:" .Values.server.service.httpsPort }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          {{- if .Values.web.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.web.livenessProbe.path | default "/" }}
              port: {{ .Values.web.service.port | default "http" }}
            initialDelaySeconds: {{ .Values.web.livenessProbe.initialDelaySeconds | default 5 }}
            timeoutSeconds: {{ .Values.web.livenessProbe.timeoutSeconds | default 20 }}
          {{- end }}
          {{- if .Values.web.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.web.readinessProbe.path | default "/" }}
              port: {{ .Values.web.service.port | default "http" }}
            initialDelaySeconds: {{ .Values.web.readinessProbe.initialDelaySeconds | default 5 }}
            timeoutSeconds: {{ .Values.web.readinessProbe.timeoutSeconds | default 5 }}
            successThreshold: {{ .Values.web.readinessProbe.successThreshold | default 5 }}
            periodSeconds: {{ .Values.web.readinessProbe.periodSeconds | default 10 }}
          {{- end }}
          resources:
            {{- toYaml .Values.web.resources | nindent 12 }}
      {{- with .Values.web.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.web.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.web.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
